# Generated by Django 3.1.14 on 2023-05-26 12:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import fosun_circle.core.db.base


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('permissions', '0006_auto_20230523_1453'),
    ]

    operations = [
        migrations.CreateModel(
            name='GroupModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creator', models.CharField(default=fosun_circle.core.db.base.AutoExecutor(), max_length=200, verbose_name='创建人')),
                ('modifier', models.CharField(default=fosun_circle.core.db.base.AutoExecutor(), max_length=200, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_del', models.BooleanField(default=False, verbose_name='是否删除')),
                ('name', models.CharField(blank=True, default='', max_length=200, verbose_name='Menu Name')),
            ],
            options={
                'db_table': 'circle_permission_menu_group',
            },
        ),
        migrations.CreateModel(
            name='OwnerToMenuPermissionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creator', models.CharField(default=fosun_circle.core.db.base.AutoExecutor(), max_length=200, verbose_name='创建人')),
                ('modifier', models.CharField(default=fosun_circle.core.db.base.AutoExecutor(), max_length=200, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_del', models.BooleanField(default=False, verbose_name='是否删除')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='permissions.groupmodel')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'circle_permission_owner_to_menus',
            },
        ),
        migrations.CreateModel(
            name='GroupOwnedMenuModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creator', models.CharField(default=fosun_circle.core.db.base.AutoExecutor(), max_length=200, verbose_name='创建人')),
                ('modifier', models.CharField(default=fosun_circle.core.db.base.AutoExecutor(), max_length=200, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_del', models.BooleanField(default=False, verbose_name='是否删除')),
                ('reason', models.CharField(blank=True, default='', max_length=100, verbose_name='进组原因')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='permissions.groupmodel')),
                ('menu', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='permissions.menumodel')),
            ],
            options={
                'db_table': 'circle_permission_group_owned_menus',
            },
        ),
        migrations.AddField(
            model_name='groupmodel',
            name='menu_users',
            field=models.ManyToManyField(related_name='owned_groups', through='permissions.OwnerToMenuPermissionModel', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='groupmodel',
            name='menus',
            field=models.ManyToManyField(related_name='owned_groups', through='permissions.GroupOwnedMenuModel', to='permissions.MenuModel'),
        ),
    ]
