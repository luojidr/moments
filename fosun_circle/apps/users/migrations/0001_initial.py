# Generated by Django 3.1.2 on 2020-11-07 13:56

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import fosun_circle.core.db.base


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CircleUsersModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('creator', models.CharField(default=fosun_circle.core.db.base.AutoExecutor(), max_length=200, verbose_name='创建人')),
                ('modifier', models.CharField(default=fosun_circle.core.db.base.AutoExecutor(), max_length=200, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_del', models.BooleanField(default=False, verbose_name='是否删除')),
                ('username', models.CharField(default='', error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, default='', max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, default='', max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, default='', max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='是否超级管理员')),
                ('avatar', models.CharField(default='', max_length=500, verbose_name='头像链接')),
                ('gender', models.SmallIntegerField(choices=[(0, '男'), (1, '女'), (3, '保密')], default=3, verbose_name='性别')),
                ('birthday', models.DateField(default='1979-01-01', verbose_name='出生日期')),
                ('phone_number', models.CharField(default='', max_length=20, verbose_name='手机号码')),
                ('state_code', models.CharField(default='+86', max_length=10, verbose_name='国家码')),
                ('employee_status', models.SmallIntegerField(choices=[(0, '未入职'), (1, '已入职'), (2, '已离职')], default=1, verbose_name='员工状态')),
                ('company', models.CharField(default='', max_length=200, verbose_name='公司名')),
                ('department_id', models.CharField(default='', max_length=200, verbose_name='部门ID')),
                ('department_chz', models.CharField(default='', max_length=200, verbose_name='部门中文名')),
                ('department_eng', models.CharField(default='', max_length=200, verbose_name='部门英文名')),
                ('position_chz', models.CharField(default='', max_length=200, verbose_name='职位中文名')),
                ('position_eng', models.CharField(default='', max_length=200, verbose_name='职位英文名')),
                ('is_agree', models.BooleanField(default=False, verbose_name='同意用户公告')),
                ('ding_job_code', models.CharField(default='', max_length=100, verbose_name='钉钉用户jobCode')),
                ('source', models.CharField(default='SYS', max_length=20, verbose_name='用户来源')),
            ],
            options={
                'db_table': 'circle_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CircleGroupModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creator', models.CharField(default=fosun_circle.core.db.base.AutoExecutor(), max_length=200, verbose_name='创建人')),
                ('modifier', models.CharField(default=fosun_circle.core.db.base.AutoExecutor(), max_length=200, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_del', models.BooleanField(default=False, verbose_name='是否删除')),
                ('name', models.CharField(default='', max_length=200, unique=True, verbose_name='用户组名称')),
            ],
            options={
                'db_table': 'circle_group',
            },
        ),
        migrations.CreateModel(
            name='CircleGroupUsersModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creator', models.CharField(default=fosun_circle.core.db.base.AutoExecutor(), max_length=200, verbose_name='创建人')),
                ('modifier', models.CharField(default=fosun_circle.core.db.base.AutoExecutor(), max_length=200, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_del', models.BooleanField(default=False, verbose_name='是否删除')),
                ('group_id', models.IntegerField(db_index=True, default=0, verbose_name='用户组id')),
                ('user_id', models.IntegerField(db_index=True, default=0, verbose_name='用户id')),
            ],
            options={
                'db_table': 'circle_group_users',
            },
        ),
        migrations.CreateModel(
            name='CircleResourcePermissionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creator', models.CharField(default=fosun_circle.core.db.base.AutoExecutor(), max_length=200, verbose_name='创建人')),
                ('modifier', models.CharField(default=fosun_circle.core.db.base.AutoExecutor(), max_length=200, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_del', models.BooleanField(default=False, verbose_name='是否删除')),
                ('name', models.CharField(default='', max_length=200, verbose_name='资源或权限名称')),
                ('resource_path', models.CharField(default='', max_length=500, verbose_name='资源或权限路径')),
                ('parent_id', models.IntegerField(db_index=True, default=0, verbose_name='父类资源或权限的ID')),
                ('perm_type', models.SmallIntegerField(choices=[(0, '资源权限'), (1, '操作权限')], default=0, verbose_name='类型')),
                ('desc', models.CharField(default='', max_length=500, verbose_name='资源或权限描述')),
            ],
            options={
                'db_table': 'circle_resource_permission',
            },
        ),
        migrations.CreateModel(
            name='CircleUsersResourcePermissionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creator', models.CharField(default=fosun_circle.core.db.base.AutoExecutor(), max_length=200, verbose_name='创建人')),
                ('modifier', models.CharField(default=fosun_circle.core.db.base.AutoExecutor(), max_length=200, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_del', models.BooleanField(default=False, verbose_name='是否删除')),
                ('user_id', models.IntegerField(db_index=True, default=0, verbose_name='用户id')),
                ('resource_id', models.IntegerField(db_index=True, default=-1, verbose_name='资源权限ID')),
                ('permission_ids', models.CharField(default='', max_length=500, verbose_name='资源某块下对应的操作权限集')),
                ('belong_type', models.SmallIntegerField(choices=[(0, '基础资源与操作权限'), (1, '用户自己拥有的资源与操作权限'), (2, '用户覆盖基础资源与操作权限')], default=0, verbose_name='用户拥有的资源和权限类型')),
            ],
            options={
                'db_table': 'circle_users_perm_resource_mapper',
            },
        ),
        migrations.CreateModel(
            name='CircleUsersVirtualRoleModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creator', models.CharField(default=fosun_circle.core.db.base.AutoExecutor(), max_length=200, verbose_name='创建人')),
                ('modifier', models.CharField(default=fosun_circle.core.db.base.AutoExecutor(), max_length=200, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_del', models.BooleanField(default=False, verbose_name='是否删除')),
                ('user_id', models.IntegerField(db_index=True, default=0, verbose_name='用户id')),
                ('role_name', models.CharField(default='', max_length=200, verbose_name='角色名称(eg: 小甜甜)')),
                ('role_avatar', models.CharField(default='', max_length=200, verbose_name='角色头像')),
                ('role_type', models.SmallIntegerField(choices=[(0, '主用户角色'), (1, '虚拟用户角色')], default=0, verbose_name='角色状态')),
                ('nick_name', models.CharField(default='', max_length=100, verbose_name='昵称')),
                ('sign_name', models.CharField(default='', max_length=500, verbose_name='个性签名')),
            ],
            options={
                'db_table': 'circle_virtual_role',
            },
        ),
    ]
